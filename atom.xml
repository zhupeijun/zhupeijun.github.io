<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2014-11-28T21:16:26+09:00</updated>
  <id>http://yoursite.com/</id>
  <author>
    <name><![CDATA[Your Name]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[iOS] Change the Constraints Value When Use the Auto Layout]]></title>
    <link href="http://yoursite.com/blog/2014/11/28/ios-change-the-constraints-value-when-use-the-auto-layout/"/>
    <updated>2014-11-28T12:06:50+09:00</updated>
    <id>http://yoursite.com/blog/2014/11/28/ios-change-the-constraints-value-when-use-the-auto-layout</id>
    <content type="html"><![CDATA[<p>When you use the auto layout, you will set some constraints  to some view. Also maybe you want to change the value in the code. Just do this:</p>

<p>First drag the constraint you want to change to the code area to generate a constraint property.</p>

<p><img src="https://qiita-image-store.s3.amazonaws.com/0/51455/c73b6773-a854-0f60-e19b-b65d18cae316.png" alt="Screen Shot 2014-11-28 at 12.03.52.png" /></p>

<p>Then do something like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="c1">//change the value of the constraint</span>
</span><span class='line'><span class="n">bottomMarginConstraint</span><span class="p">.</span><span class="n">constant</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'><span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">layoutIfNeeded</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Number Theory] Euclidean Algorithm &amp; Inverse Element]]></title>
    <link href="http://yoursite.com/blog/2014/11/24/number-theory-euclidean-algorithm-and-inverse-element/"/>
    <updated>2014-11-24T23:45:07+09:00</updated>
    <id>http://yoursite.com/blog/2014/11/24/number-theory-euclidean-algorithm-and-inverse-element</id>
    <content type="html"><![CDATA[<p>With the inverse element, we can get the value of modulo in a division, such as <code>k = (a / b) % m</code>. To generate a inverse element, we should know the euclidean algorithm.</p>

<h3>Euclidean Algorithm</h3>

<p>The euclidean algorithm is a method for computing <strong><em>greatest common divisor</em></strong> (GCD) of two integers.
The algorithm can be described as this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gcd(a, b) = gcd(b, a % b) </span></code></pre></td></tr></table></div></figure>


<p><strong>Proof:</strong></p>

<p>Suppose <code>c = gcd(a, b)</code> and <code>a &gt; b</code>.
Then we can write a equation.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>a = xb + m</span></code></pre></td></tr></table></div></figure>


<p>Because the gcd of <code>a</code> and <code>b</code> is <code>c</code>, so we can replace the <code>a</code> and <code>b</code> with <code>k1 * c</code> and <code>k2 * c</code>. After replaced <code>a</code> and <code>b</code>, it seems like we also can replace <code>m</code> with <code>k3 * c</code>. So the equation will like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>k1 * c = x * k2 * c + k3 * c</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>So <code>m</code> and <code>b</code> have the same gcd. Therefore the value of the <code>gcd(a, b)</code>
is the same with the value of <code>gcd(b, a % b)</code></p>

<p>So for this, we can get a gcd(a, b) quickly with such as c++ language.</p>

<p>The code will like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='cpp'><span class='line'><span class="kt">int</span> <span class="nf">gcd</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="n">b</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="k">return</span> <span class="n">a</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">gcd</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">a</span> <span class="o">%</span> <span class="n">b</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Solve <em>ax + by = gcd(a, b)</em></h3>

<p><strong><em>To be continued&hellip;</em></strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Git] Config Git to Push Current Branch]]></title>
    <link href="http://yoursite.com/blog/2014/11/17/git-config-git-to-push-current-branch/"/>
    <updated>2014-11-17T13:25:09+09:00</updated>
    <id>http://yoursite.com/blog/2014/11/17/git-config-git-to-push-current-branch</id>
    <content type="html"><![CDATA[<p>If you want to only push the current branch without the branch name, you can use this command to setup your config file.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git config --global push.default current</span></code></pre></td></tr></table></div></figure>


<p>This will add the following things to your <code>.gitconfig</code> file.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[push]
</span><span class='line'>  default = current</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Git] Base Operation]]></title>
    <link href="http://yoursite.com/blog/2014/11/13/git-base-operation/"/>
    <updated>2014-11-13T14:00:46+09:00</updated>
    <id>http://yoursite.com/blog/2014/11/13/git-base-operation</id>
    <content type="html"><![CDATA[<p>Some memo for the branch operation.</p>

<p><strong>Delete Remote Branch</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git push origin :&lt;branch_name&gt;</span></code></pre></td></tr></table></div></figure>


<p><strong>Rename Branch</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git rename -m &lt;old_name&gt; &lt;new_name&gt;</span></code></pre></td></tr></table></div></figure>


<p><strong>Change Remote Origin Url</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git remote set-url origin &lt;remote-url&gt;</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Git] About Rebase]]></title>
    <link href="http://yoursite.com/blog/2014/11/12/git-about-rebase/"/>
    <updated>2014-11-12T11:31:28+09:00</updated>
    <id>http://yoursite.com/blog/2014/11/12/git-about-rebase</id>
    <content type="html"><![CDATA[<h4>git pull &ndash;rebase</h4>

<p>This command will get rebase the remote branch with the local branch.</p>

<p><em>Before</em></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>    D --- E  local branch
</span><span class='line'>   /
</span><span class='line'>A --- B --- C  origin branch</span></code></pre></td></tr></table></div></figure>


<p><em>After</em></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>          D --- E  local branch
</span><span class='line'>         /
</span><span class='line'>A --- B --- C  origin branch</span></code></pre></td></tr></table></div></figure>


<h4>git rebase &ndash;onto master server client</h4>

<p>This will &ldquo;Check out the client branch, figure out the patches from the common ancestor of the client and server branches, and then replay them onto master.&rdquo; (From <a href="http://git-scm.com/book/ch3-6.html">here</a>). That is to say:</p>

<p>The parts H, I, J will be picked up and add to the master branch.
Why pick up the H, I, J? Because the client and server have the same ancestor D, &ldquo;from the common ancestor&rdquo; that is to say from D.</p>

<p><em>Before</em></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>A --- B --- C  master 
</span><span class='line'>       \
</span><span class='line'>        D --- E --- F  server
</span><span class='line'>         \
</span><span class='line'>          H --- I --- J  client</span></code></pre></td></tr></table></div></figure>


<p><em>After</em></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>          H --- I --- J  client
</span><span class='line'>         /
</span><span class='line'>A --- B --- C   master 
</span><span class='line'>   \
</span><span class='line'>    D --- E --- F  server</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Python] Read From Stdin]]></title>
    <link href="http://yoursite.com/blog/2014/11/12/python-read-from-stdin/"/>
    <updated>2014-11-12T11:06:18+09:00</updated>
    <id>http://yoursite.com/blog/2014/11/12/python-read-from-stdin</id>
    <content type="html"><![CDATA[<p>If you want to read a line from the stdin. Use this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="nb">raw_input</span><span class="p">()</span>
</span><span class='line'><span class="c">#or</span>
</span><span class='line'><span class="n">sys</span><span class="o">.</span><span class="n">stdin</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>If the value is a integer, float or something else, you should cast the input to the type that you want.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">raw_input</span><span class="p">())</span>
</span><span class='line'><span class="n">b</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="nb">raw_input</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>


<p>if the line have some integers splitted by space such as this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="mi">12</span> <span class="mi">25</span> <span class="mi">37</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then you can do this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='py'><span class='line'><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">)</span> <span class="o">=</span> <span class="nb">map</span><span class="p">(</span><span class="nb">int</span><span class="p">,</span> <span class="nb">raw_input</span><span class="p">()</span><span class="o">.</span><span class="n">split</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[iOS] Slide Down Refresh TableView -- UIRefreshControl]]></title>
    <link href="http://yoursite.com/blog/2014/11/01/ios-slide-down-refresh-tableview-uirefreshcontrol/"/>
    <updated>2014-11-01T22:28:57+09:00</updated>
    <id>http://yoursite.com/blog/2014/11/01/ios-slide-down-refresh-tableview-uirefreshcontrol</id>
    <content type="html"><![CDATA[<p>For the table view, you want to slide down the table view to refresh the data of the table view. Maybe you need to add the <code>UIRefreshControl</code> to the <code>TableView</code>.</p>

<p>You can use the <code>UIRefreshControl</code> like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">func</span> <span class="nf">addRefreshControl</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">refreshControl</span> <span class="o">=</span> <span class="bp">UIRefreshControl</span><span class="p">()</span>
</span><span class='line'>        <span class="n">refreshControl</span><span class="o">!</span><span class="p">.</span><span class="n">addTarget</span><span class="p">(</span><span class="nb">self</span><span class="p">,</span> <span class="nl">action</span><span class="p">:</span> <span class="s">&quot;refreshTableView&quot;</span><span class="p">,</span> <span class="nl">forControlEvents</span><span class="p">:</span> <span class="n">UIControlEvents</span><span class="p">.</span><span class="n">ValueChanged</span><span class="p">)</span>
</span><span class='line'>        <span class="n">tableView</span><span class="p">.</span><span class="n">addSubview</span><span class="p">(</span><span class="n">refreshControl</span><span class="o">!</span><span class="p">)</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">func</span> <span class="n">refreshTableView</span><span class="p">()</span>
</span><span class='line'>    <span class="c1">//Somthing like tableView.reloadData()</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>After reload the data, maybe the refresh view will not be disappeared. Try to end the refreshing of the UIRefreshControl use the code like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">refreshControl</span><span class="o">?</span><span class="p">.</span><span class="n">endRefreshing</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Android] the Code Style for Android]]></title>
    <link href="http://yoursite.com/blog/2014/10/31/android-the-code-style-for-android/"/>
    <updated>2014-10-31T00:29:48+09:00</updated>
    <id>http://yoursite.com/blog/2014/10/31/android-the-code-style-for-android</id>
    <content type="html"><![CDATA[<p>This <a href="https://source.android.com/source/code-style.html">link</a> from the android official site have introduced some code style or rules for the android development. Some of these rules could also be used in other language.</p>

<p>The link: <a href="https://source.android.com/source/code-style.html">https://source.android.com/source/code-style.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[VIM] Vim Set Template Script]]></title>
    <link href="http://yoursite.com/blog/2014/10/31/vim-vim-set-template-script/"/>
    <updated>2014-10-31T00:27:42+09:00</updated>
    <id>http://yoursite.com/blog/2014/10/31/vim-vim-set-template-script</id>
    <content type="html"><![CDATA[<p>Add following config to your <code>.vimrc</code> file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='vim'><span class='line'>command Rt <span class="m">0</span>r  <span class="p">~</span><span class="sr">/.vim/</span>template/<span class="k">t</span>.cpp
</span></code></pre></td></tr></table></div></figure>


<p>The <code>t.cpp</code> is the file of the template script. In the vim, use the <code>Rt</code> command to load the script.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Ruby] Read JSON From Url and Parse JSON]]></title>
    <link href="http://yoursite.com/blog/2014/10/30/ruby-read-json-from-url-and-parse-json/"/>
    <updated>2014-10-30T01:21:09+09:00</updated>
    <id>http://yoursite.com/blog/2014/10/30/ruby-read-json-from-url-and-parse-json</id>
    <content type="html"><![CDATA[<p>We can use the <code>open-uri</code> to get the content from the url. And use the <code>JSON</code> to parse the JSON string to hash or array.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="nb">require</span> <span class="s1">&#39;open-uri&#39;</span>
</span><span class='line'><span class="nb">require</span> <span class="s1">&#39;JSON&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">url</span> <span class="o">=</span> <span class="s2">&quot;https://api.com/result.json&quot;</span>
</span><span class='line'><span class="n">json</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">url</span><span class="p">)</span><span class="o">.</span><span class="n">read</span>
</span><span class='line'><span class="n">objs</span> <span class="o">=</span> <span class="no">JSON</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">json</span><span class="p">)</span>
</span><span class='line'><span class="n">objs</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">obj</span><span class="o">|</span>
</span><span class='line'>  <span class="n">title</span> <span class="o">=</span> <span class="n">obj</span><span class="o">[</span><span class="s2">&quot;title&quot;</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>If the result is not a array. The result will be a dictionary. Just use like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">obj</span> <span class="o">=</span> <span class="no">JSON</span><span class="o">.</span><span class="n">parse</span><span class="p">(</span><span class="n">json</span><span class="p">)</span>
</span><span class='line'><span class="n">title</span> <span class="o">=</span> <span class="n">obj</span><span class="o">[</span><span class="s2">&quot;title&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[iOS] Add Local Notifications]]></title>
    <link href="http://yoursite.com/blog/2014/10/23/ios-add-local-notifications/"/>
    <updated>2014-10-23T09:46:13+09:00</updated>
    <id>http://yoursite.com/blog/2014/10/23/ios-add-local-notifications</id>
    <content type="html"><![CDATA[<p>If you want to send local notifications for the user. You can use the <code>UILocalNotification</code>. Just like this.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">var</span> <span class="n">notification</span> <span class="o">=</span> <span class="bp">UILocalNotification</span><span class="p">()</span>
</span><span class='line'><span class="n">notification</span><span class="p">.</span><span class="n">fireDate</span> <span class="o">=</span> <span class="bp">NSDate</span><span class="p">(</span><span class="nl">timeIntervalSinceNow</span><span class="p">:</span> <span class="mi">10</span><span class="p">)</span>
</span><span class='line'><span class="n">notification</span><span class="p">.</span><span class="n">timeZone</span> <span class="o">=</span> <span class="bp">NSTimeZone</span><span class="p">.</span><span class="n">localTimeZone</span><span class="p">()</span>
</span><span class='line'><span class="n">notification</span><span class="p">.</span><span class="n">alertBody</span> <span class="o">=</span> <span class="s">&quot;This is a notification!&quot;</span>
</span><span class='line'><span class="n">notification</span><span class="p">.</span><span class="n">alertAction</span> <span class="o">=</span> <span class="s">&quot;Open&quot;</span>
</span><span class='line'><span class="n">notification</span><span class="p">.</span><span class="n">soundName</span> <span class="o">=</span> <span class="n">UILocalNotificationDefaultSoundName</span>
</span><span class='line'><span class="bp">UIApplication</span><span class="p">.</span><span class="n">sharedApplication</span><span class="p">().</span><span class="n">scheduleLocalNotification</span><span class="p">(</span><span class="n">notification</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>But this is not done. May be you will get some error message in the console like this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="n">Attempting</span> <span class="n">to</span> <span class="n">schedule</span> <span class="n">a</span> <span class="n">local</span> <span class="n">notification</span> <span class="p">.....</span> <span class="n">with</span> <span class="n">an</span> <span class="n">alert</span> <span class="n">but</span> <span class="n">haven</span><span class="err">&#39;</span><span class="n">t</span> <span class="n">received</span> <span class="n">permission</span> <span class="n">from</span> <span class="n">the</span> <span class="n">user</span> <span class="n">to</span> <span class="n">display</span> <span class="n">alerts</span>
</span></code></pre></td></tr></table></div></figure>


<p>For this, you should ask the user to permit your app to send notifications when the app lunch in the <code>didFinishLaunchingWithOptions</code> from the <code>AppDelegate</code> file.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">func</span> <span class="nf">application</span><span class="p">(</span><span class="nl">application</span><span class="p">:</span> <span class="bp">UIApplication</span><span class="p">,</span> <span class="n">didFinishLaunchingWithOptions</span> <span class="nl">launchOptions</span><span class="p">:</span> <span class="p">[</span><span class="nl">NSObject</span><span class="p">:</span> <span class="n">AnyObject</span><span class="p">]</span><span class="o">?</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Bool</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="bp">UIApplication</span><span class="p">.</span><span class="n">instancesRespondToSelector</span><span class="p">(</span><span class="n">Selector</span><span class="p">(</span><span class="s">&quot;registerUserNotificationSettings:&quot;</span><span class="p">)))</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">application</span><span class="p">.</span><span class="n">registerUserNotificationSettings</span><span class="p">(</span> <span class="n">UIUserNotificationSettings</span><span class="p">(</span><span class="nl">forTypes</span><span class="p">:</span> <span class="n">UIUserNotificationType</span><span class="p">.</span><span class="n">Sound</span> <span class="o">|</span> <span class="n">UIUserNotificationType</span><span class="p">.</span><span class="n">Alert</span> <span class="o">|</span> <span class="n">UIUserNotificationType</span><span class="p">.</span><span class="n">Badge</span><span class="p">,</span> <span class="nl">categories</span><span class="p">:</span> <span class="nb">nil</span><span class="p">))</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">true</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>Tip: The notification only works when the app is in the background.</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[iOS] Get Date From Formatted String or Make a Formatted Date String]]></title>
    <link href="http://yoursite.com/blog/2014/10/22/ios-get-date-from-formatted-string-or-make-a-formatted-date-string/"/>
    <updated>2014-10-22T13:40:35+09:00</updated>
    <id>http://yoursite.com/blog/2014/10/22/ios-get-date-from-formatted-string-or-make-a-formatted-date-string</id>
    <content type="html"><![CDATA[<p>If you have a string like <code>2014-10-22 00:54:00</code>. You can convert the string to the <code>NSDate</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">var</span> <span class="n">dateFormater</span> <span class="o">=</span> <span class="bp">NSDateFormatter</span><span class="p">()</span>
</span><span class='line'><span class="n">dateFormater</span><span class="p">.</span><span class="n">dateFormat</span> <span class="o">=</span> <span class="s">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>
</span><span class='line'><span class="k">var</span> <span class="n">startTime</span> <span class="o">=</span> <span class="n">dateFormater</span><span class="p">.</span><span class="n">dateFromString</span><span class="p">(</span><span class="s">&quot;2014-10-22 00:54:00&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>If you have a <code>NSDate</code>, you also can use the <code>NSDateFormatter</code> to generate a formatted string.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='swift'><span class='line'><span class="k">let</span> <span class="n">dateFormater</span> <span class="o">=</span> <span class="bp">NSDateFormatter</span><span class="p">()</span>
</span><span class='line'><span class="n">dateFormater</span><span class="p">.</span><span class="n">dateFormat</span> <span class="o">=</span> <span class="s">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="p">;</span>
</span><span class='line'><span class="k">let</span> <span class="n">dateString</span> <span class="o">=</span> <span class="n">dateFormater</span><span class="p">.</span><span class="n">stringFromDate</span><span class="p">(</span><span class="n">today</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
